/* ==========================================================================
Grid system
========================================================================== */

/* Grid variables
   ========================================================================== */

// Default 940px grid
@gridColumns:             16;
@gridColumnWidth:         42px;
@gridGutterWidth:         0;
@gridRowWidth:            (@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));

// 1200px min
@gridColumnWidth1200:     50px;
@gridGutterWidth1200:     25px;
@gridRowWidth1200:        (@gridColumns * @gridColumnWidth1200) + (@gridGutterWidth1200 * (@gridColumns - 1));

// 768px-979px
@gridColumnWidth768:      42px;
@gridGutterWidth768:      21px;
@gridRowWidth768:         (@gridColumns * @gridColumnWidth768) + (@gridGutterWidth768 * (@gridColumns - 1));

@gridColumnWidthWide:     60px;
@gridGutterWidthWide:     21px;
@gridRowWidthWide:       (@gridColumns * @gridColumnWidthWide) + (@gridGutterWidthWide * (@gridColumns - 1));

@gridColumnWidthHomepage:     80px;
@gridGutterWidthHomepage:     10px;
@gridRowWidthHomepage:       (@gridColumns * @gridColumnWidthHomepage) + (@gridGutterWidthHomepage * (@gridColumns - 1));

// Fluid grid
// -------------------------
@fluidGridColumnWidth:    percentage(@gridColumnWidth/@gridRowWidth);
@fluidGridGutterWidth:    percentage(@gridGutterWidth/@gridRowWidth);

// 1200px min
@fluidGridColumnWidth1200:     percentage(@gridColumnWidth1200/@gridRowWidth1200);
@fluidGridGutterWidth1200:     percentage(@gridGutterWidth1200/@gridRowWidth1200);

// 768px-979px
@fluidGridColumnWidth768:      percentage(@gridColumnWidth768/@gridRowWidth768);
@fluidGridGutterWidth768:      percentage(@gridGutterWidth768/@gridRowWidth768);

// 768px-979px
@fluidGridColumnWidthHomepage:      percentage(@gridColumnWidthHomepage/@gridRowWidthHomepage);
@fluidGridGutterWidthHomepage:      percentage(@gridGutterWidthHomepage/@gridRowWidthHomepage);

// Fixed (940px)
#grid > .core(@gridColumnWidth, @gridGutterWidth);
.ty-footer-grid {
    #grid > .core(@gridColumnWidth1200, @gridGutterWidth1200);
}

// Fluid (940px)
#grid > .fluid(@fluidGridColumnWidth, @fluidGridGutterWidth);

.homepage-grid {
    #grid > .fluid(@fluidGridColumnWidthHomepage, @fluidGridGutterWidthHomepage);
}
// Reset utility classes due to specificity
[class*="span"].hide,
.row-fluid [class*="span"].hide {
    display: none;
}

[class*="span"].pull-right,
.row-fluid [class*="span"].pull-right {
    float: right;
}

// Container (centered, fixed-width layouts)
.container {
    .container-fixed();
}

// Fluid layouts (left aligned, with sidebar, min- & max-width content)
.container-fluid {
    margin: 0 auto;
    padding-right: @gridGutterWidth;
    padding-left: @gridGutterWidth;
    .clearfix();
}